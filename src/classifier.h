/*
  Copyright Simon Mitternacht 2013-2015.

  This file is part of FreeSASA.

  FreeSASA is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  FreeSASA is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with FreeSASA.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef CLASSIFIER_H
#define CLASSIFIER_H

#include "freesasa.h"

/**
    Get the VdW radius of an element
 */
double
freesasa_guess_radius(const char* symbol);

/**
    The following three structs and the following functionsare only
    exposed in a header because the autogenerated static classifiers
    need to see them, they are not intended for use outside of this
    context. Therefore the functions to modify the structs are hidden
    inside classifier.c.

    Names of classes, types, etc are stored in arrays to simplify
    generic searching.
*/

/**
    Struct to store information about the types-section in a user-config.
 */
struct classifier_types {
    int n_classes; //!< number of classes
    int n_types; //!< number of types
    char **name; //!< names of types
    double *type_radius; //!< radius of type
    int *type_class; //!< class of each type
    char **class_name; //!< name of each type
};


/**
     Configuration info for each residue type.
 */
struct classifier_residue {
    int n_atoms; //!< Number of atoms
    char *name; //!< Name of residue
    char **atom_name; //!< Names of atoms
    double *atom_radius; //!< Atomic radii
    int *atom_class; //!< Classes of atoms
};

/**
    Stores a user-configuration as extracted from a configuration
    file. No info about types, since those are only a tool used
    intermediately in assigment of radii and classes.
    
    An array of the names of residues is stored directly in the struct
    to facilitate searching for residues. The class_name array should
    be a clone of that found in struct types (can be done bye
    config_copy_classes()).

    Only for internal use.
 */
struct classifier_config {
    int n_residues; //!< Number of residues
    int n_classes; //!< Number of classes
    char **residue_name; //!< Names of residues
    char **class_name; //!< Names of classes
    struct classifier_residue **residue;
};

/** To be used in classifiers based on config-files */
double
freesasa_classifier_config_radius(const char *res_name,
                                  const char *atom_name,
                                  const freesasa_classifier *classifier);

/** To be used in classifiers based on config-files */
int
freesasa_classifier_config_class(const char *res_name, 
                                 const char *atom_name,
                                 const freesasa_classifier *classifier);

/** To be used in classifiers based on config-files */
const char*
freesasa_classifier_config_class2str(int the_class,
                                     const freesasa_classifier *classifier);


#endif /* CLASSIFIER_H */
